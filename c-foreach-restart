#!/usr/bin/python


import argparse
import logging
import sys
import time

from cassandra.tools           import get_instances
from cassandra.tools.config    import LOG_LEVEL
from cassandra.tools.tcpircbot import IrcBot

logging.basicConfig(level=LOG_LEVEL, format="%(asctime)s %(levelname)-8s %(message)s")


def logmsgbot_message(instance, issue=None):
    return "Restarting {0.service_name} {1}".format(instance, "({})".format(issue) if issue else "")

def main():
    args = parse_args()
    bot = IrcBot(args.tcpircbot_host, args.tcpircbot_port, 1.0)
    for instance in get_instances():
        if args.logmsgbot:
            bot.log(logmsgbot_message(instance, args.phabricator_issue))
        instance.restart(
            attempts=args.attempts,
            retry=args.retry,
            post_shutdown=args.execute_post_shutdown
        )
        time.sleep(args.delay)

def parse_args():
    parser = argparse.ArgumentParser(description="Cassandra instance restarter")
    parser.add_argument("-a", "--attempts", metavar="ATTEMPTS", default=10, type=int,
                        help="Maximum number of times to check if service is up after restarting.")
    parser.add_argument("-r", "--retry", metavar="RETRY", default=6, type=int,
                        help="Number seconds between connection attempts, in seconds.")
    parser.add_argument("--execute-post-shutdown", metavar="CMD", type=str,
                        help="Command to execute after Cassandra has been shutdown, and before it "
                        "is started back up.")
    parser.add_argument("-d", "--delay", metavar="DELAY", type=float, default=0.0,
                        help="Delay between instance restarts (defaults to no delay).")
    parser.add_argument("--logmsgbot", action="store_true",
                        help="Log restarts to SAL (via logmsgbot and #wikimedia-operations).")
    parser.add_argument("--tcpircbot-host", default="neon.wikimedia.org", metavar="HOST",
                        help="tcpircbot hostname. Only valid when --logmsgbot is used. "
                        "Default: neon.wikimedia.org")
    parser.add_argument("--tcpircbot-port", metavar="PORT", type=int, default=9200,
                        help="tcpircbot port number. Only valid when --logmsgbot is used. "
                        "Default: 9200")
    parser.add_argument("--phabricator-issue", metavar="ISSUE",
                        help="Phabricator issue to associate these restarts with. This currently "
                        "only makes sense in combination with --logmsgbot where it is included in "
                        "the formatted log message.")
    return parser.parse_args(sys.argv[1:])


if __name__ == "__main__":
    main()
